#BlueJ class context
comment0.target=TicTacToe
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=name1\ name2\ previousgameCount\ previousWinner
comment10.target=java.lang.String[]\ turnIssuer(java.lang.String,\ java.lang.String,\ int,\ java.lang.String)
comment10.text=\r\n\ turnIssuer\ -\ Issues\ the\ play\ turns\ based\ on\ the\ last\ winner\ and\ the\ game\ count\ at\ first.\r\n\ When\ it\ cannot\ rely\ on\ the\ previous\ variable\ it\ picks\ one\ of\ the\ two\ players\ randomly\r\n\r\n\ @param\ \ \ \ \ String,String,\ int,\ String\r\n\ @return\ \ \ \ String[]\r\n
comment11.params=gameBoard\ position
comment11.target=boolean\ isTaken(char[],\ int)
comment11.text=\r\n\ isTaken\ -\ Verifies\ if\ the\ wanted\ position\ is\ not\ already\ occupied\ by\ another\ pawn\r\n\ it\ returns\ true\ if\ the\ wanted\ position\ is\ already\ taken\ and\ false\ if\ it\ is\ not,\ thus\ available\r\n\ \r\n\ @param\ \ \ \ \ char[]\ (gameBoard),\ int\ (wanted\ position)\r\n\ @return\ \ \ \ Boolean\r\n
comment12.params=gameBoard
comment12.target=int\ isFull(char[])
comment12.text=\r\n\ isFull\ -\ Verifies\ if\ any\ of\ the\ board's\ positions\ are\ available\r\n\ it\ returns\ 1\ if\ there\ are\ no\ position\ available\r\n\ and\ it\ returns\ 0\ if\ there\ is\ at\ least\ one\ available\ position\r\n\r\n\ @param\ \ \ \ \ char[]\ (gameBoard)\r\n\ @return\ \ \ \ int\r\n
comment13.params=gameBoard
comment13.target=void\ resetBoard(char[])
comment13.text=\r\n\ resetBoard\ -\ Sets\ all\ the\ indexes\ of\ the\ gameBoard\ to\ the\ space\ character\r\n\r\n\ @param\ \ char[]\ (gameBoard)\r\n\ @return\ \ \ \ void\r\n
comment2.params=gameBoard
comment2.target=void\ printGameBoard(char[])
comment2.text=\r\n\ printGameBoard\ -\ Displays\ the\ Tic-Tac-Toe\ board\ in\ all\ of\ its\ states\r\n\r\n\ @param\ \ \ \ \ Char\ Array\r\n\ @return\ \ \ \ void\r\n
comment3.params=gameBoard
comment3.target=void\ printMiniGameBoard(char[])
comment3.text=\r\n\ printMiniGameBoard\ -\ Displays\ a\ miniature\ version\ of\ the\ Tic-Tac-Toe\ board\ in\ all\ of\ its\ states\r\n\r\n\ @param\ \ \ \ \ Char\ Array\r\n\ @return\ \ \ \ void\r\n
comment4.params=playerName1\ player1Score\ playerName2\ player2Score\ gameCount\ winner
comment4.target=void\ printScoreBoard(java.lang.String,\ int,\ java.lang.String,\ int,\ int,\ java.lang.String)
comment4.text=\r\n\ printScoreBoard\ -\ Displays\ the\ Score\ Board,\ the\ game\ count\ and\ the\ last\ winner\r\n\r\n\ @param\ \ \ \ \ String,int,\ String,int,String\r\n\ @return\ \ \ \ void\r\n
comment5.params=command
comment5.target=int\ positionParser(java.lang.String)
comment5.text=\r\n\ positionParser\ -\ Interprets\ the\ chosen\ position\ if\ valid\ or\ else\ it\ return\ -1\r\n\r\n\ @param\ \ \ \ \ String\r\n\ @return\ \ \ \ int\r\n
comment6.params=
comment6.target=void\ clearScreen()
comment6.text=\r\n\ clearScreen\ -\ Enters\ about\ 100\ empty\ lines\ to\ clear\ out\ the\ terminal\r\n\r\n\ @param\ \ \ \ \ none\r\n\ @return\ \ \ \ void\r\n
comment7.params=
comment7.target=void\ printGameInstruction()
comment7.text=\r\n\ printGameInstruction\ -\ Displays\ instructions\ on\ the\ commands\ to\ play\ in\ any\ position\ on\ the\ board\r\n\r\n\ @param\ \ \ \ \ none\r\n\ @return\ \ \ \ void\r\n
comment8.params=
comment8.target=void\ printMenu()
comment9.params=player\ gameBoard
comment9.target=int\ wins(Player,\ char[])
comment9.text=\r\n\ wins\ -\ Tests\ the\ pawn\ positions\ of\ a\ player\ to\ determine\ if\ he/she\ wins\ the\ current\ game\ or\ not\r\n\ it\ returns\ 1\ if\ the\ player\ wins,\ or\ else\ it\ returns\ 0\r\n\r\n\ @param\ \ \ \ \ Player,\ char[]\ (gameBoard)\r\n\ @return\ \ \ \ int\ \:\ \r\n
numComments=14
